{"version":3,"sources":["constants.ts","operatorHandlers.ts","app.ts"],"names":[],"mappings":"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","file":"app.c61986b1.js","sourceRoot":"..\\src","sourcesContent":["import { IActions } from './types/index';\r\n\r\nexport const actions: IActions = {\r\n  ADD: 'add',\r\n  SUBTRACT: 'subtract',\r\n  MULTIPLY: 'multiply',\r\n  DIVIDE: 'divide',\r\n  DECIMAL: 'decimal',\r\n  PERCENTAGE: 'percentage',\r\n  EQUALS: 'equals',\r\n  CLEAR: 'clear'\r\n};\r\n","import { display, calculator } from './app';\r\nimport { actions } from './constants';\r\n\r\nfunction decimal(currentOutput) {\r\n  console.log(currentOutput);\r\n  if (currentOutput.includes('.')) {\r\n    return;\r\n  }\r\n  if (calculator.getState.previousButtonType === 'operator') {\r\n    display.textContent = currentOutput + '.';\r\n    return;\r\n  }\r\n  display.textContent = currentOutput + '.';\r\n}\r\n\r\nfunction clear() {\r\n  console.log('clear');\r\n  display.textContent = '0';\r\n  calculator.setState = { firstValue: null };\r\n  calculator.setState = { operator: null };\r\n  calculator.setState = { secondValue: null };\r\n  calculator.setState = { previousButtonType: null };\r\n}\r\n\r\nfunction add() {\r\n  calculator.setState = { operator: actions.ADD };\r\n}\r\n\r\nfunction subtract() {\r\n  calculator.setState = { operator: actions.SUBTRACT };\r\n}\r\n\r\nfunction multiply() {\r\n  calculator.setState = { operator: actions.MULTIPLY };\r\n}\r\n\r\nfunction divide() {\r\n  calculator.setState = { operator: actions.DIVIDE };\r\n}\r\n\r\nfunction percentage(input: string): number {\r\n  console.log(input);\r\n  return parseFloat(input) / 100;\r\n}\r\n\r\nfunction calculate({ firstVal, operator, secondVal }): number {\r\n  switch (operator) {\r\n    case actions.ADD:\r\n      return parseFloat(firstVal) + parseFloat(secondVal);\r\n    case actions.SUBTRACT:\r\n      return parseFloat(firstVal) - parseFloat(secondVal);\r\n    case actions.MULTIPLY:\r\n      return parseFloat(firstVal) * parseFloat(secondVal);\r\n    case actions.DIVIDE:\r\n      return parseFloat(firstVal) / parseFloat(secondVal);\r\n    default:\r\n      return 0;\r\n  }\r\n}\r\n\r\nfunction equals(firstVal, operator, secondVal) {\r\n  const result = calculate({ firstVal, operator, secondVal });\r\n  display.textContent = result.toString();\r\n  calculator.setState = { firstValue: null };\r\n  calculator.setState = { operator: null };\r\n  calculator.setState = { secondValue: null };\r\n  calculator.setState = { previousButtonType: null };\r\n}\r\nexport default {\r\n  decimal,\r\n  clear,\r\n  equals,\r\n  add,\r\n  subtract,\r\n  divide,\r\n  multiply,\r\n  percentage,\r\n  calculate\r\n};\r\n","import { IState, IActions } from './types';\r\nimport { actions } from './constants';\r\nimport operatorHandlers from './operatorHandlers';\r\n\r\nexport const display: HTMLElement = document.querySelector(\r\n  '.calculator__output'\r\n);\r\nconst clearButton = document.querySelector('[data-action=\"clear\"]');\r\n\r\nclass Calculator {\r\n  private state = {\r\n    previousButtonType: null,\r\n    firstValue: null,\r\n    secondValue: null,\r\n    operator: null\r\n  };\r\n\r\n  private buttonElements = document.querySelector('.calculator__buttons');\r\n\r\n  private displayOutput = '0';\r\n\r\n  get buttons() {\r\n    return this.buttonElements;\r\n  }\r\n\r\n  get getState() {\r\n    return this.state;\r\n  }\r\n  set setState(newState: IState) {\r\n    this.state = Object.assign(this.state, newState);\r\n  }\r\n\r\n  set setFirstValue(value: string) {\r\n    this.setState = { firstValue: value };\r\n  }\r\n\r\n  set setSecondValue(value: string) {\r\n    this.setState = { secondValue: value };\r\n  }\r\n\r\n  set setDisplayOutput(value: string) {\r\n    this.displayOutput = value;\r\n    display.textContent = this.displayOutput;\r\n  }\r\n}\r\n\r\nexport function hasDecimal(str: string): boolean {\r\n  const regex = /\\./g;\r\n  return regex.test(str);\r\n}\r\n\r\nfunction isFirstValue(): boolean {\r\n  return calculator.getState.firstValue === null;\r\n}\r\n\r\nfunction isStartOfFirstValue(currentOutput: string): boolean {\r\n  return isFirstValue() || currentOutput === '0';\r\n}\r\n\r\nfunction isSecondValue(): boolean {\r\n  return (\r\n    calculator.getState.firstValue &&\r\n    calculator.getState.previousButtonType === 'operator' &&\r\n    calculator.getState.secondValue === null\r\n  );\r\n}\r\n\r\nfunction handleNumberInput(currentOutput, buttonValue) {\r\n  if (hasDecimal(currentOutput) && calculator.getState.operator === null) {\r\n    calculator.setDisplayOutput = currentOutput + buttonValue;\r\n    return this;\r\n  }\r\n  if (isStartOfFirstValue(currentOutput)) {\r\n    calculator.setDisplayOutput = buttonValue;\r\n    setFirstValue(buttonValue);\r\n    return this;\r\n  }\r\n\r\n  if (isFirstValue()) {\r\n    calculator.setDisplayOutput = display.textContent + buttonValue;\r\n    setFirstValue(display.textContent + buttonValue);\r\n    return this;\r\n  }\r\n\r\n  // Set second value\r\n  if (isSecondValue()) {\r\n    setSecondValue(currentOutput);\r\n    calculator.setDisplayOutput = buttonValue;\r\n  } else {\r\n    calculator.setDisplayOutput = display.textContent + buttonValue;\r\n  }\r\n  return this;\r\n}\r\n\r\nfunction toggleClearMode(action: string): void {\r\n  if (action === actions.CLEAR) {\r\n    clearButton.textContent = 'AC';\r\n  } else {\r\n    clearButton.textContent = 'CE';\r\n  }\r\n}\r\n\r\nfunction handleOperator(action, currentOutput) {\r\n  return operatorHandlers[action](currentOutput);\r\n}\r\n\r\nfunction isAction(actions: IActions, action: string): boolean {\r\n  return !action || Object.keys(actions).includes(action.toUpperCase());\r\n}\r\n\r\nfunction buttonHandler(e) {\r\n  const button: HTMLElement = e.target;\r\n  if (button.matches('.calculator__button')) {\r\n    const { action } = button.dataset;\r\n    const buttonValue: string = button.textContent.trim();\r\n    const currentOutput = display.textContent;\r\n\r\n    // Toggle clear button text\r\n    toggleClearMode(action);\r\n\r\n    if (!action) {\r\n      // Is number key\r\n      return handleNumberInput(currentOutput, buttonValue);\r\n    }\r\n    // is action key\r\n    if (isAction(actions, action)) {\r\n      calculator.setState = { previousButtonType: 'operator' };\r\n      if (action === actions.EQUALS) {\r\n        return operatorHandlers.equals(\r\n          calculator.getState.firstValue,\r\n          calculator.getState.operator,\r\n          currentOutput\r\n        );\r\n      }\r\n      if (action === actions.PERCENTAGE) {\r\n        calculator.setDisplayOutput = operatorHandlers\r\n          .percentage(currentOutput)\r\n          .toString();\r\n        return;\r\n      }\r\n      setFirstValue(currentOutput);\r\n\r\n      return handleOperator(action, currentOutput);\r\n    }\r\n  }\r\n}\r\n\r\nexport const calculator = new Calculator();\r\n\r\ncalculator.buttons.addEventListener('click', buttonHandler);\r\n"]}