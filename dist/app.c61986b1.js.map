{"version":3,"sources":["constants.ts","operatorHandlers.ts","app.ts"],"names":[],"mappings":"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":"app.c61986b1.js","sourceRoot":"..\\src","sourcesContent":["import { IActions } from './types/index';\r\n\r\nexport const actions: IActions = {\r\n  ADD: 'add',\r\n  SUBTRACT: 'subtract',\r\n  MULTIPLY: 'multiply',\r\n  DIVIDE: 'divide',\r\n  DECIMAL: 'decimal',\r\n  PERCENTAGE: 'percentage',\r\n  EQUALS: 'equals',\r\n  CLEAR: 'clear'\r\n};\r\n","import { display, state } from './app';\r\nimport { actions } from './constants';\r\n\r\nfunction decimal(currentOutput) {\r\n  if (currentOutput.includes('.')) {\r\n    return;\r\n  }\r\n  if (state.previousButtonType === 'operator') {\r\n    display.textContent = currentOutput + '.';\r\n    return;\r\n  }\r\n  display.textContent = currentOutput + '.';\r\n}\r\n\r\nfunction clear\r\n\r\nfunction clear() {\r\n  display.textContent = '0';\r\n  state.firstValue = null;\r\n  state.operator = null;\r\n  state.secondValue = null;\r\n  state.previousButtonType = null;\r\n}\r\n\r\nfunction add() {\r\n  state.operator = actions.ADD;\r\n}\r\n\r\nfunction subtract() {\r\n  state.operator = actions.SUBTRACT;\r\n}\r\n\r\nfunction multiply() {\r\n  state.operator = actions.MULTIPLY;\r\n}\r\n\r\nfunction divide() {\r\n  state.operator = actions.DIVIDE;\r\n}\r\n\r\nfunction percentage(input: string): number {\r\n  return parseFloat(input) / 100;\r\n}\r\n\r\nfunction calculate({ firstVal, operator, secondVal }): number {\r\n  switch (operator) {\r\n    case actions.ADD:\r\n      return parseFloat(firstVal) + parseFloat(secondVal);\r\n    case actions.SUBTRACT:\r\n      return parseFloat(firstVal) - parseFloat(secondVal);\r\n    case actions.MULTIPLY:\r\n      return parseFloat(firstVal) * parseFloat(secondVal);\r\n    case actions.DIVIDE:\r\n      return parseFloat(firstVal) / parseFloat(secondVal);\r\n    default:\r\n      return 0;\r\n  }\r\n}\r\n\r\nfunction equals(firstVal, operator, secondVal) {\r\n  const result = calculate({ firstVal, operator, secondVal });\r\n  display.textContent = result.toString();\r\n  state.firstValue = null;\r\n  state.operator = null;\r\n  state.secondValue = null;\r\n  state.previousButtonType = null;\r\n}\r\n\r\nexport default {\r\n  decimal,\r\n  clear,\r\n  equals,\r\n  add,\r\n  subtract,\r\n  divide,\r\n  multiply,\r\n  percentage,\r\n  calculate\r\n};\r\n","import { IState, IActions } from './types';\r\nimport { actions } from './constants';\r\nimport operatorHandlers from './operatorHandlers';\r\n\r\nconst calculator = document.querySelector('.calculator');\r\nconst buttons = calculator.querySelector('.calculator__buttons');\r\nexport const display: HTMLElement = document.querySelector(\r\n  '.calculator__output'\r\n);\r\nconst clearButton = document.querySelector('[data-action=\"clear\"]');\r\n\r\nexport const state: IState = {\r\n  previousButtonType: null,\r\n  firstValue: null,\r\n  secondValue: null,\r\n  operator: null\r\n};\r\n\r\nfunction handleNumberInput(currentOutput, buttonValue, previousButtonType) {\r\n  if (currentOutput === '0') {\r\n    display.textContent = buttonValue;\r\n    return this;\r\n  }\r\n  if (\r\n    state.firstValue &&\r\n    previousButtonType === 'operator' &&\r\n    state.secondValue === null\r\n  ) {\r\n    display.textContent = buttonValue;\r\n    state.secondValue = display.textContent;\r\n  } else {\r\n    display.textContent += buttonValue;\r\n  }\r\n}\r\n\r\nfunction toggleClearMode(action: string): void {\r\n  if (action === actions.CLEAR) {\r\n    clearButton.textContent = 'AC';\r\n    return;\r\n  } else {\r\n    clearButton.textContent = 'CE';\r\n  }\r\n}\r\n\r\nfunction handleOperator(action, currentOutput) {\r\n  return operatorHandlers[action](currentOutput);\r\n}\r\n\r\nfunction isAction(actions: IActions, action: string): boolean {\r\n  return !action || Object.keys(actions).includes(action.toUpperCase());\r\n}\r\n\r\nfunction buttonHandler(e) {\r\n  const button: HTMLElement = e.target;\r\n\r\n  if (button.matches('.calculator__button')) {\r\n    const action: string = button.dataset.action;\r\n    const buttonValue: string = button.textContent.trim();\r\n    const currentOutput = display.textContent;\r\n\r\n    // Toggle clear button text\r\n    toggleClearMode(action);\r\n\r\n    if (!action) {\r\n      // Is number key\r\n      return handleNumberInput(\r\n        currentOutput,\r\n        buttonValue,\r\n        state.previousButtonType\r\n      );\r\n    }\r\n    // is action key\r\n    if (isAction(actions, action)) {\r\n      state.previousButtonType = 'operator';\r\n      if (action === actions.EQUALS) {\r\n        return operatorHandlers.equals(\r\n          state.firstValue,\r\n          state.operator,\r\n          currentOutput\r\n        );\r\n      }\r\n      if (action === actions.PERCENTAGE) {\r\n        display.textContent = operatorHandlers\r\n          .percentage(currentOutput)\r\n          .toString();\r\n        return;\r\n      }\r\n      state.firstValue = currentOutput;\r\n\r\n      return handleOperator(action, currentOutput);\r\n    }\r\n  }\r\n}\r\n\r\nbuttons.addEventListener('click', buttonHandler);\r\n\r\nclass Calculator {}\r\n\r\n// (function init() {\r\n//   const numbers = document.getElementsByClassName('btn__number');\r\n//   const equalsBtn = document.getElementById('equals');\r\n//   const ac = document.getElementById('ac');\r\n//   const plusMinus = document.getElementById('plus-minus');\r\n//   const percentage = document.getElementById('percentage');\r\n//   const operators = document.getElementsByClassName('operator');\r\n\r\n//   // Add keyboard events\r\n//   const _attachKeyboardEvents = function _attachKeyboardEvents() {\r\n//     document.body.addEventListener('keydown', function(e) {\r\n//       let handleInput = new InputHandler();\r\n//       // 0\r\n//       if (e.keyCode === 48 || e.keyCode === 96) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('0');\r\n//       }\r\n//       // 1\r\n//       else if (e.keyCode === 49 || e.keyCode === 97) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('1');\r\n//       }\r\n//       // 2\r\n//       else if (e.keyCode === 50 || e.keyCode === 98) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('2');\r\n//       }\r\n//       // 3\r\n//       else if (e.keyCode === 51 || e.keyCode === 99) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('3');\r\n//       }\r\n//       // 4\r\n//       else if (e.keyCode === 52 || e.keyCode === 100) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('4');\r\n//       }\r\n//       // 5\r\n//       else if (e.keyCode === 53 || e.keyCode === 101) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('5');\r\n//       }\r\n//       // 6\r\n//       else if (e.keyCode === 54 || e.keyCode === 102) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('6');\r\n//       }\r\n//       // 7\r\n//       else if (e.keyCode === 55 || e.keyCode === 103) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('7');\r\n//       }\r\n//       // 8\r\n//       else if (e.keyCode === 56 || e.keyCode === 104) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('8');\r\n//       }\r\n//       // 9\r\n//       else if (e.keyCode === 57 || e.keyCode === 105) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('9');\r\n//       }\r\n//       // ===\r\n//       else if (e.keyCode === 13) {\r\n//         handleInput.getInput();\r\n//         handleInput.evaluate(input.innerText);\r\n//       }\r\n//       // *\r\n//       else if (e.keyCode === 57 || e.keyCode === 106) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('*');\r\n//         if (!handleInput.checkDuplicates('*') && input.innerText.length > 0) {\r\n//           handleInput.updateView('*');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // +\r\n//       else if (e.keyCode === 107) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('+');\r\n//         if (!handleInput.checkDuplicates('+') && input.innerText.length > 0) {\r\n//           handleInput.updateView('+');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // -\r\n//       else if (e.keyCode === 109 || e.keyCode === 189) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('-');\r\n//         if (!handleInput.checkDuplicates('-') && input.innerText.length > 0) {\r\n//           handleInput.updateView('-');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // .\r\n//       else if (e.keyCode === 110 || e.keyCode === 190) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('.');\r\n//         if (!handleInput.checkDuplicates('.') && input.innerText.length > 0) {\r\n//           handleInput.updateView('.');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // /\r\n//       else if (e.keyCode === 111 || e.keyCode === 191) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('/');\r\n//         if (!handleInput.checkDuplicates('/') && input.innerText.length > 0) {\r\n//           handleInput.updateView('/');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // Clear\r\n//       else if (e.keyCode === 8 || e.keyCode === 46) {\r\n//         input.innerText = '';\r\n//         output.innerText = '';\r\n//       } else {\r\n//         return;\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   // Add event listeners\r\n//   const _listen = function _listen() {\r\n//     let handleInput = new InputHandler();\r\n//     Array.prototype.forEach.call(numbers, function(item) {\r\n//       item.addEventListener('click', function() {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView(this.innerText);\r\n//       });\r\n//     });\r\n\r\n//     equalsBtn.addEventListener(\r\n//       'click',\r\n//       function() {\r\n//         let getTotal = new InputHandler();\r\n//         getTotal.getInput();\r\n//         getTotal.evaluate(input.innerText);\r\n//       },\r\n//       false\r\n//     );\r\n\r\n//     ac.addEventListener('click', function() {\r\n//       input.innerText = '';\r\n//       output.innerText = '';\r\n//     });\r\n\r\n//     plusMinus.addEventListener('click', function() {\r\n//       handleInput.getInput();\r\n//       handleInput.updateView('-');\r\n//     });\r\n\r\n//     Array.prototype.forEach.call(operators, function(item) {\r\n//       item.addEventListener('click', function() {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates(this.innerText);\r\n//         if (\r\n//           !handleInput.checkDuplicates(this.innerText) &&\r\n//           input.innerText.length > 0\r\n//         ) {\r\n//           handleInput.updateView(this.innerText);\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       });\r\n//     });\r\n//     percentage.addEventListener('click', function() {\r\n//       let getPercentage = new InputHandler();\r\n//       getPercentage.getInput();\r\n//       getPercentage.evaluate(getPercentage.handlePercent(input.innerText));\r\n//     });\r\n//   };\r\n\r\n//   _listen();\r\n//   _attachKeyboardEvents();\r\n// })();\r\n\r\n// function InputHandler() {\r\n//   const input = document.getElementById('input');\r\n//   const output = document.getElementById('output');\r\n\r\n//   this.getInput = function _getInput() {\r\n//     return input.innerText;\r\n//   };\r\n\r\n//   this.checkDuplicates = function _checkDuplicates(pressed) {\r\n//     const operators = ['X', '%', '/', '-', '.', '+'];\r\n//     if (operators.indexOf(input.innerText.slice(-1))) {\r\n//       return false;\r\n//     } else {\r\n//       return true;\r\n//     }\r\n//   };\r\n\r\n//   this.handlePercent = function _handlePercent(total) {\r\n//     let percTotal = total + '/100';\r\n//     return percTotal;\r\n//   };\r\n\r\n//   this.updateView = function updateView(x) {\r\n//     input.innerText += x;\r\n//   };\r\n\r\n//   this.evaluate = function _evaluate(total) {\r\n//     let parsedTotal = total.replace('X', '*');\r\n//     let finalTotal = eval(parsedTotal);\r\n//     let stringified = finalTotal.toString();\r\n//     if (stringified.indexOf('.') >= 0 && finalTotal.toString().length > 9) {\r\n//       output.innerText = finalTotal.toFixed(9 - finalTotal.toString().length);\r\n//     } else {\r\n//       output.innerText = finalTotal;\r\n//     }\r\n//   };\r\n// }\r\n"]}