{"version":3,"sources":["constants.ts","operatorHandlers.ts","app.ts"],"names":[],"mappings":"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":"app.c61986b1.js","sourceRoot":"..\\src","sourcesContent":["import { IActions } from './types';\r\n\r\nexport const actions: IActions = {\r\n  ADD: 'add',\r\n  SUBTRACT: 'subtract',\r\n  MULTIPLY: 'multiply',\r\n  DIVIDE: 'divide',\r\n  DECIMAL: 'decimal',\r\n  EQUALS: 'equals',\r\n  CLEAR: 'clear'\r\n};\r\n","import { display, state } from './app';\r\nimport { actions } from './constants';\r\n\r\nfunction decimal(currentOutput) {\r\n  if (currentOutput.includes('.')) {\r\n    return;\r\n  }\r\n  if (state.previousButtonType === 'operator') {\r\n    display.textContent = currentOutput + '.';\r\n  }\r\n  display.textContent = currentOutput + '.';\r\n}\r\n\r\nfunction clear() {\r\n  display.textContent = '0';\r\n  state.firstValue = null;\r\n  state.operator = null;\r\n  state.secondValue = null;\r\n  state.previousButtonType = null;\r\n}\r\n\r\nfunction add() {\r\n  state.operator = actions.ADD;\r\n}\r\n\r\nfunction subtract() {\r\n  state.operator = actions.SUBTRACT;\r\n}\r\n\r\nfunction multiply() {\r\n  state.operator = actions.MULTIPLY;\r\n}\r\n\r\nfunction divide() {\r\n  state.operator = actions.DIVIDE;\r\n}\r\n\r\nfunction calculate(firstVal, operator, secondVal): string {\r\n  let result;\r\n\r\n  switch (operator) {\r\n    case actions.ADD:\r\n      result = parseFloat(firstVal) + parseFloat(secondVal);\r\n      break;\r\n    case actions.SUBTRACT:\r\n      result = parseFloat(firstVal) - parseFloat(secondVal);\r\n      break;\r\n    case actions.MULTIPLY:\r\n      result = parseFloat(firstVal) * parseFloat(secondVal);\r\n      break;\r\n    case actions.DIVIDE:\r\n      result = parseFloat(firstVal) / parseFloat(secondVal);\r\n      break;\r\n    default:\r\n      return '';\r\n  }\r\n\r\n  return result.toString();\r\n}\r\n\r\nfunction equals(firstVal, operator, secondVal) {\r\n  console.log('equals clicked', { firstVal, operator, secondVal });\r\n  console.log(calculate(firstVal, operator, secondVal));\r\n  display.textContent = calculate(firstVal, operator, secondVal);\r\n}\r\n\r\nexport default {\r\n  decimal,\r\n  clear,\r\n  equals,\r\n  add,\r\n  subtract,\r\n  divide,\r\n  multiply,\r\n  calculate\r\n};\r\n","import { IState } from './types';\r\nimport { actions } from './constants';\r\nimport operatorHandlers from './operatorHandlers';\r\n\r\nconst calculator = document.querySelector('.calculator');\r\nconst buttons = document.querySelector('.calculator__buttons');\r\nexport const display: HTMLElement = document.querySelector(\r\n  '.calculator__output'\r\n);\r\nconst clearButton = document.querySelector('[data-action=\"clear\"]');\r\n\r\nexport const state: IState = {\r\n  previousButtonType: null,\r\n  firstValue: null,\r\n  secondValue: null,\r\n  operator: null\r\n};\r\n\r\nfunction handleNumberInput(currentOutput, buttonValue, previousButtonType) {\r\n  console.log({ currentOutput, buttonValue, previousButtonType, state });\r\n  if (currentOutput === '0') {\r\n    display.textContent = buttonValue;\r\n    return this;\r\n  }\r\n  if (\r\n    state.firstValue &&\r\n    previousButtonType === 'operator' &&\r\n    state.secondValue === null\r\n  ) {\r\n    display.textContent = buttonValue;\r\n    state.secondValue = display.textContent;\r\n  } else {\r\n    display.textContent += buttonValue;\r\n  }\r\n}\r\n\r\nfunction toggleClearMode(action: string) {\r\n  if (action !== actions.CLEAR) {\r\n    clearButton.textContent = 'CE';\r\n  } else {\r\n    clearButton.textContent = 'AC';\r\n  }\r\n}\r\n\r\nfunction handleOperator(action, currentOutput) {\r\n  return operatorHandlers[action](currentOutput);\r\n}\r\n\r\nfunction buttonHandler(e) {\r\n  const button: HTMLElement = e.target;\r\n\r\n  if (button.matches('.calculator__button')) {\r\n    const action: string = button.dataset.action;\r\n    const buttonValue: string = button.textContent.trim();\r\n    const currentOutput = display.textContent;\r\n\r\n    // Toggle clear button text\r\n    toggleClearMode(action);\r\n\r\n    if (!action) {\r\n      // Is number key\r\n      return handleNumberInput(\r\n        currentOutput,\r\n        buttonValue,\r\n        state.previousButtonType\r\n      );\r\n    }\r\n    // is action key\r\n    if (Object.keys(actions).includes(action.toUpperCase())) {\r\n      state.previousButtonType = 'operator';\r\n      if (action === actions.EQUALS) {\r\n        return operatorHandlers.equals(\r\n          state.firstValue,\r\n          state.operator,\r\n          currentOutput\r\n        );\r\n      }\r\n      state.firstValue = currentOutput;\r\n      console.log(state);\r\n      return handleOperator(action, currentOutput);\r\n    }\r\n  }\r\n}\r\n\r\nbuttons.addEventListener('click', buttonHandler);\r\n\r\n// (function init() {\r\n//   const numbers = document.getElementsByClassName('btn__number');\r\n//   const equalsBtn = document.getElementById('equals');\r\n//   const ac = document.getElementById('ac');\r\n//   const plusMinus = document.getElementById('plus-minus');\r\n//   const percentage = document.getElementById('percentage');\r\n//   const operators = document.getElementsByClassName('operator');\r\n\r\n//   // Add keyboard events\r\n//   const _attachKeyboardEvents = function _attachKeyboardEvents() {\r\n//     document.body.addEventListener('keydown', function(e) {\r\n//       let handleInput = new InputHandler();\r\n//       // 0\r\n//       if (e.keyCode === 48 || e.keyCode === 96) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('0');\r\n//       }\r\n//       // 1\r\n//       else if (e.keyCode === 49 || e.keyCode === 97) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('1');\r\n//       }\r\n//       // 2\r\n//       else if (e.keyCode === 50 || e.keyCode === 98) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('2');\r\n//       }\r\n//       // 3\r\n//       else if (e.keyCode === 51 || e.keyCode === 99) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('3');\r\n//       }\r\n//       // 4\r\n//       else if (e.keyCode === 52 || e.keyCode === 100) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('4');\r\n//       }\r\n//       // 5\r\n//       else if (e.keyCode === 53 || e.keyCode === 101) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('5');\r\n//       }\r\n//       // 6\r\n//       else if (e.keyCode === 54 || e.keyCode === 102) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('6');\r\n//       }\r\n//       // 7\r\n//       else if (e.keyCode === 55 || e.keyCode === 103) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('7');\r\n//       }\r\n//       // 8\r\n//       else if (e.keyCode === 56 || e.keyCode === 104) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('8');\r\n//       }\r\n//       // 9\r\n//       else if (e.keyCode === 57 || e.keyCode === 105) {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView('9');\r\n//       }\r\n//       // ===\r\n//       else if (e.keyCode === 13) {\r\n//         handleInput.getInput();\r\n//         handleInput.evaluate(input.innerText);\r\n//       }\r\n//       // *\r\n//       else if (e.keyCode === 57 || e.keyCode === 106) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('*');\r\n//         if (!handleInput.checkDuplicates('*') && input.innerText.length > 0) {\r\n//           handleInput.updateView('*');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // +\r\n//       else if (e.keyCode === 107) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('+');\r\n//         if (!handleInput.checkDuplicates('+') && input.innerText.length > 0) {\r\n//           handleInput.updateView('+');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // -\r\n//       else if (e.keyCode === 109 || e.keyCode === 189) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('-');\r\n//         if (!handleInput.checkDuplicates('-') && input.innerText.length > 0) {\r\n//           handleInput.updateView('-');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // .\r\n//       else if (e.keyCode === 110 || e.keyCode === 190) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('.');\r\n//         if (!handleInput.checkDuplicates('.') && input.innerText.length > 0) {\r\n//           handleInput.updateView('.');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // /\r\n//       else if (e.keyCode === 111 || e.keyCode === 191) {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates('/');\r\n//         if (!handleInput.checkDuplicates('/') && input.innerText.length > 0) {\r\n//           handleInput.updateView('/');\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       }\r\n//       // Clear\r\n//       else if (e.keyCode === 8 || e.keyCode === 46) {\r\n//         input.innerText = '';\r\n//         output.innerText = '';\r\n//       } else {\r\n//         return;\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   // Add event listeners\r\n//   const _listen = function _listen() {\r\n//     let handleInput = new InputHandler();\r\n//     Array.prototype.forEach.call(numbers, function(item) {\r\n//       item.addEventListener('click', function() {\r\n//         handleInput.getInput();\r\n//         handleInput.updateView(this.innerText);\r\n//       });\r\n//     });\r\n\r\n//     equalsBtn.addEventListener(\r\n//       'click',\r\n//       function() {\r\n//         let getTotal = new InputHandler();\r\n//         getTotal.getInput();\r\n//         getTotal.evaluate(input.innerText);\r\n//       },\r\n//       false\r\n//     );\r\n\r\n//     ac.addEventListener('click', function() {\r\n//       input.innerText = '';\r\n//       output.innerText = '';\r\n//     });\r\n\r\n//     plusMinus.addEventListener('click', function() {\r\n//       handleInput.getInput();\r\n//       handleInput.updateView('-');\r\n//     });\r\n\r\n//     Array.prototype.forEach.call(operators, function(item) {\r\n//       item.addEventListener('click', function() {\r\n//         handleInput.getInput();\r\n//         handleInput.checkDuplicates(this.innerText);\r\n//         if (\r\n//           !handleInput.checkDuplicates(this.innerText) &&\r\n//           input.innerText.length > 0\r\n//         ) {\r\n//           handleInput.updateView(this.innerText);\r\n//         } else {\r\n//           return;\r\n//         }\r\n//       });\r\n//     });\r\n//     percentage.addEventListener('click', function() {\r\n//       let getPercentage = new InputHandler();\r\n//       getPercentage.getInput();\r\n//       getPercentage.evaluate(getPercentage.handlePercent(input.innerText));\r\n//     });\r\n//   };\r\n\r\n//   _listen();\r\n//   _attachKeyboardEvents();\r\n// })();\r\n\r\n// function InputHandler() {\r\n//   const input = document.getElementById('input');\r\n//   const output = document.getElementById('output');\r\n\r\n//   this.getInput = function _getInput() {\r\n//     return input.innerText;\r\n//   };\r\n\r\n//   this.checkDuplicates = function _checkDuplicates(pressed) {\r\n//     const operators = ['X', '%', '/', '-', '.', '+'];\r\n//     if (operators.indexOf(input.innerText.slice(-1))) {\r\n//       return false;\r\n//     } else {\r\n//       return true;\r\n//     }\r\n//   };\r\n\r\n//   this.handlePercent = function _handlePercent(total) {\r\n//     let percTotal = total + '/100';\r\n//     return percTotal;\r\n//   };\r\n\r\n//   this.updateView = function updateView(x) {\r\n//     input.innerText += x;\r\n//   };\r\n\r\n//   this.evaluate = function _evaluate(total) {\r\n//     let parsedTotal = total.replace('X', '*');\r\n//     let finalTotal = eval(parsedTotal);\r\n//     let stringified = finalTotal.toString();\r\n//     if (stringified.indexOf('.') >= 0 && finalTotal.toString().length > 9) {\r\n//       output.innerText = finalTotal.toFixed(9 - finalTotal.toString().length);\r\n//     } else {\r\n//       output.innerText = finalTotal;\r\n//     }\r\n//   };\r\n// }\r\n"]}